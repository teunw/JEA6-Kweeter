buildscript {
    ext {
        kotlinVersion = "1.2.30"
        wildflyVersion = "11.0.0.Final"
        wildflyHome = "${rootDir}/build/unpacked/dist/wildfly-${wildflyVersion}"
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
    }
}

plugins {
    id "org.sonarqube" version "2.5"
}

configurations {
    install
}

apply plugin: "java"
apply plugin: "kotlin"
apply plugin: "kotlin-allopen"
apply plugin: "kotlin-noarg"
apply plugin: "war"

allOpen {
    annotation("javax.ejb.Stateless")
    annotation("javax.ws.rs.Path")
}

noArg {
    annotation("javax.ws.rs.Path")
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repository.jboss.org/nexus/content/groups/public-jboss" }
    maven { url "https://repository.jboss.org/nexus/content/repositories" }
    maven { url "https://repository.jboss.org/nexus/content/repositories/thirdparty-releases" }
}

dependencies {
    providedCompile "javax:javaee-api:8.0"
    // Delete dom4j in \JEA6-Kweeter\Kweeter-Backend\build\libs\exploded\Kweeter-Backend.war\WEB-INF\lib
    providedCompile "dom4j:dom4j:1.6.1"

    compile("org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion")
    compile("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion")
    // https://mvnrepository.com/artifact/postgresql/postgresql
    compile group: 'postgresql', name: 'postgresql', version: '9.1-901-1.jdbc4'

    compile group: "javax", name: "javaee-web-api", version: "8.0"
    // https://mvnrepository.com/artifact/org.mindrot/jbcrypt
    compile group: 'org.mindrot', name: 'jbcrypt', version: '0.3m'

    compile 'com.github.salomonbrys.kotson:kotson:2.5.0'
    compile "com.github.kstyrc:embedded-redis:0.6"
    compile "redis.clients:jedis:2.9.0"
    compile 'com.squareup.okhttp3:okhttp:3.10.0'
    compile "org.elasticsearch.client:elasticsearch-rest-high-level-client:6.2.2"
    compile group: 'org.apache.commons', name: 'commons-text', version: '1.2'
    compile 'io.jsonwebtoken:jjwt:0.9.0'

    // https://mvnrepository.com/artifact/org.mockito/mockito-all
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.9.5'
    // https://mvnrepository.com/artifact/org.jboss.arquillian.junit/arquillian-junit-container
    testCompile group: 'org.jboss.arquillian.junit', name: 'arquillian-junit-container', version: '1.3.0.Final'
    testCompile "com.github.kstyrc:embedded-redis:0.6"
    testCompile 'io.rest-assured:rest-assured:3.0.7'

    testCompile "junit:junit:4.12"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"

    testRuntime "org.wildfly.arquillian:wildfly-arquillian-container-managed:2.0.2.Final"
    testRuntime "org.jboss.logging:jboss-logging:3.1.4.GA"
    testRuntime "org.jboss.resteasy:resteasy-client:3.1.1.Final"

    install "org.wildfly:wildfly-dist:${wildflyVersion}@zip"
}

test {
    environment "JBOSS_HOME", rootProject.wildflyHome
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}

task unzipWildFlyAppServer(type: Copy) {
    from zipTree(configurations.install.singleFile)
    into file("${buildDir}/unpacked/dist")
    tasks.test.dependsOn unzipWildFlyAppServer
}